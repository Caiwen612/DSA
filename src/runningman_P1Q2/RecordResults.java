package runningman_P1Q2;

import javax.swing.*;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * RecordResults.java A client program that uses the List ADT to keep track
 *  of the list of runners and the list of marathon finishers.
 * @author Kat Tan
 * @version 1.0
 */
public class RecordResults extends javax.swing.JFrame {

  private List<Runner> runnerList = new ArrayList<>();
  private List<Runner> finisherList = new ArrayList<>();
  private int currentPosition = 1;
  private Runner runner;

  public RecordResults() {
    initComponents();
    jtfCurrentPosition.setText("" + currentPosition);
    initializeList();
    jtfNumber.grabFocus();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jlblTitle = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jbtAdd = new javax.swing.JButton();
    jbtConfirm = new javax.swing.JButton();
    jtfName = new javax.swing.JTextField();
    jtfNumber = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    jtfCurrentPosition = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    jtaResults = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jlblTitle.setFont(new java.awt.Font("Corbel", 1, 36)); // NOI18N
    jlblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jlblTitle.setText("Marathon Finishers");

    jLabel2.setFont(new java.awt.Font("Corbel", 0, 18)); // NOI18N
    jLabel2.setText("Runner's name");

    jLabel3.setFont(new java.awt.Font("Corbel", 0, 18)); // NOI18N
    jLabel3.setText("Runner's number");

    jbtAdd.setFont(new java.awt.Font("Corbel", 0, 18)); // NOI18N
    jbtAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/runningman_P1Q2/image/runner.jpg"))); // NOI18N
    jbtAdd.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbtAddActionPerformed(evt);
      }
    });

    jbtConfirm.setFont(new java.awt.Font("Corbel", 0, 18)); // NOI18N
    jbtConfirm.setText("Confirm");
    jbtConfirm.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbtConfirmActionPerformed(evt);
      }
    });

    jtfName.setEditable(false);
    jtfName.setFont(new java.awt.Font("Corbel", 0, 24)); // NOI18N
    jtfName.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jtfNameActionPerformed(evt);
      }
    });

    jtfNumber.setFont(new java.awt.Font("Corbel", 0, 24)); // NOI18N
    jtfNumber.setForeground(new java.awt.Color(0, 102, 255));
    jtfNumber.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jtfNumberActionPerformed(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Corbel", 0, 18)); // NOI18N
    jLabel1.setText("Finishing Position");

    jtfCurrentPosition.setEditable(false);
    jtfCurrentPosition.setFont(new java.awt.Font("Corbel", 0, 24)); // NOI18N
    jtfCurrentPosition.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jtfCurrentPositionActionPerformed(evt);
      }
    });

    jtaResults.setColumns(20);
    jtaResults.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
    jtaResults.setRows(5);
    jScrollPane1.setViewportView(jtaResults);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jbtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(18, 19, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addGap(0, 0, 0)))
              .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jtfNumber)
              .addComponent(jtfName)
              .addComponent(jtfCurrentPosition, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jbtConfirm))
          .addComponent(jlblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(2, 2, 2))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jlblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jtfCurrentPosition))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jtfNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jbtConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(99, Short.MAX_VALUE))
      .addGroup(layout.createSequentialGroup()
        .addGap(20, 20, 20)
        .addComponent(jbtAdd)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jtfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNameActionPerformed
  }//GEN-LAST:event_jtfNameActionPerformed

  private void jbtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddActionPerformed
  }//GEN-LAST:event_jbtAddActionPerformed

  //TODO: After confirm button has been pressed
  private void jbtConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtConfirmActionPerformed
    System.out.println("Confirm button has been press");

    //EXTRA: To check if a runner number that is entered exists
    Runner result = null;
    boolean status = false;
    boolean sameRecord = false;

    for (Runner runner : runnerList) {
      if (Objects.equals(jtfNumber.getText(), Integer.toString(runner.getNumber()))) {
        result = runner;
        //Extra:  A runner should only be recorded as crossing the finishing line at most once
        for(Runner finishRunner : finisherList){
          if(result.equals(finishRunner)){
            sameRecord = true;
            break;
          }
        }
        if(!sameRecord){
          finisherList.add(result);
          currentPosition++;//increase position
          status = true;
        } else{
          JOptionPane.showMessageDialog(null, "This runner already in the record", "ERROR", JOptionPane.ERROR_MESSAGE);}
      }
    }

    //Display error message if runner not in database
    if (!status && !sameRecord) {
      JOptionPane.showMessageDialog(null, "Cannot add the result because invalid runner number\nSolution: Please register the runner ", "ERROR", JOptionPane.ERROR_MESSAGE);
    }

    //Display result
    jtaResults.setText("MARATHON RESULTS");
    for (int i = 0; i < finisherList.size(); i++) {
      Runner runner = finisherList.get(i);
      jtaResults.append("\n" + (i + 1) + ". No. " + runner.getNumber() + "\t\t" + runner.getName());
    }

    //Clear all entry after input data
    jtfName.setText("");
    jtfNumber.setText("");
    jtfCurrentPosition.setText(String.valueOf(currentPosition));



  }//GEN-LAST:event_jbtConfirmActionPerformed

  private void jtfCurrentPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCurrentPositionActionPerformed
  }//GEN-LAST:event_jtfCurrentPositionActionPerformed

  //TODO: Set name based on number(input user)
  private void jtfNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNumberActionPerformed
    System.out.println("Number text box has been pressed enter");

    //Check whether user input same with register runner list or not
    boolean status = false;
    for(Runner runner: runnerList){
      if(Objects.equals(jtfNumber.getText(), Integer.toString(runner.getNumber()))){
        jtfName.setText(runner.getName());
        status = true;
        break;
      }
    }

    //Display error message if user key in wrong data which not register in Registration.java
    if(!status){
      JOptionPane.showMessageDialog(null,"Invalid number","ERROR",JOptionPane.ERROR_MESSAGE);
    }

    //Check the data that u key in Registration.java in console
    for(Runner runner: runnerList){
      System.out.println(runner);
    }
    
  }//GEN-LAST:event_jtfNumberActionPerformed

  private void initializeList() {
    try {
      File file = new File("runners.dat");
      ObjectInputStream oiStream = new ObjectInputStream(new FileInputStream(file));
      runnerList = (ArrayList<Runner>) (oiStream.readObject());
      oiStream.close();
    } catch (FileNotFoundException ex) {
      JOptionPane.showMessageDialog(null, "File not found", "ERROR", JOptionPane.ERROR_MESSAGE);
    } catch (IOException ex) {
      JOptionPane.showMessageDialog(null, "Cannot read from file", "ERROR", JOptionPane.ERROR_MESSAGE);
    } catch (ClassNotFoundException ex) {
      JOptionPane.showMessageDialog(null, "Class not found", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
  }

  public String formatFinisherList() {
    String outputStr = "MARATHON RESULTS\n";
    for (int i = 0; i < finisherList.size(); ++i) {
      outputStr += (i + 1) + ". " + finisherList.get(i);
    }
    return outputStr;
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(RecordResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(RecordResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(RecordResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(RecordResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new RecordResults().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton jbtAdd;
  private javax.swing.JButton jbtConfirm;
  private javax.swing.JLabel jlblTitle;
  private javax.swing.JTextArea jtaResults;
  private javax.swing.JTextField jtfCurrentPosition;
  private javax.swing.JTextField jtfName;
  private javax.swing.JTextField jtfNumber;
  // End of variables declaration//GEN-END:variables
}
